var screenshot_dir = "screenshots/dataplot/";

casper.notebook_test(function() {
    "use strict";

    casper.test.info("Testing the cell toolbar for generating a dataplot");

    var screenshot_index = 1;
    
    function take_screenshot(name) {
    	var index_string = screenshot_index.toString();
        casper.then(function () {
            casper.capture(screenshot_dir + index_string +
            		       ". " + name + ".png");
        });
        
        screenshot_index++;
    }
    
    this.viewport(1024, 768);

    take_screenshot("open-notebook");
    
    //Check the toolbar exists
    this.then(function() {
        this.test.assertExists(
            "li[data-name=\"Linker%20Extension%20Dataplot\"] > a",
            "Toolbar visible in toolbar menu"
        );
    });
    
    //Check the insert cell button exists
    var selector = "#insert_dataplot_cell";
    this.waitForSelector(selector);
    this.then(function() {
        this.test.assertExists(selector, "Toolbar button exists");
    });
    
    var cell_count = this.evaluate(function () {
        return (Jupyter.notebook.get_cells().length);
    });
    
    this.then(function () {
    	this.test.assertEquals(cell_count, 1, "Only one cell exists");
    });
    
    //Try inserting a cell
    this.thenClick(selector);
    this.then(function() {
        selector = ".dataplot-toolbar";
        this.waitForSelector(selector);
        this.test.assertExists(selector, "Toolbar exists");
        this.test.assertVisible(selector, "Toolbar is visible");
    });
    
    take_screenshot("button-clicked")
    
    
    this.waitFor(function() {
        return this.evaluate(function() {
        	return Jupyter.notebook.get_cells().length == 2;
        });
    });
    
    this.waitFor(function() {
        cell_count = this.evaluate(function () {
        	var cells = Jupyter.notebook.get_cells(); 	
            return (cells.length);
        });
        
        return true;
    });

    this.then(function () {
    	this.test.assertEquals(cell_count, 2, "New cell created");
    });
    
    this.thenClick("#show-hide-1");
    take_screenshot("show-code");
    this.waitUntilVisible(".input_area");
    this.then(function() {
        this.test.assertVisible(".input_area", "Code is visible");
    });
    
    this.thenClick("#show-hide-1");
    take_screenshot("hide-code");
    this.waitWhileVisible(".input_area");
    this.then(function() {
        this.test.assertNotVisible(".input_area", "Code is hidden");
    });
    
    this.thenClick("#dataplot-input-1");
    this.waitForSelector("#select");
    
    this.waitForSelector("#files-loading-dataplot");
    this.waitWhileVisible("#files-loading-dataplot");
    
    this.then(function() {
        this.test.assertVisible("#data-form-dataplot",
                               "Select file modal exists");
    });
    
    take_screenshot("click-file-select");
    
    this.thenEvaluate(function() {
        $("#file-tree-dataplot li > a[title=\"data1.dat\"]").prev(".button.chk").click();
    });

    this.thenEvaluate(function() {
        $("#file-tree-dataplot li > a[title=\"data2.dat\"]").prev(".button.chk").click();
    });
    
    take_screenshot("files-clicked");
    
    this.waitForSelector("#select");
    this.thenClick("#select");
    
    this.waitFor(function() {
        return this.evaluate(function() {
        	files_text = $("#input-display-1").text();
        	console.log("Dataplot display text is: " + files_text);
            return files_text != "No files selected";
        });
    });
    
    take_screenshot("files-chosen");

    this.then(function() {
    	var files_text = this.evaluate(function() {
    		return $("#input-display-1").text();
    	});
    	
    	this.test.assertEquals(files_text, "2 files selected", "Dataplot files successfully uploaded");
    });
    
    this.waitUntilVisible("#generate-plot-1");

    this.then(function() {
        this.evaluate(function() {
            $(".yaxis_1").val("Distance");
            $(".xaxis_1").val("Time");
            $(".caption_1").val("Graph generated by test");
        });
    });
    
    take_screenshot("labels-set");
    this.thenClick("#generate-plot-1");
    
    this.waitUntilVisible(".output_png");
    
    take_screenshot("graph-generated");
    
    this.then(function() {
        this.test.assertVisible(".output_png",
                               "Graph generated");
    });
    
});